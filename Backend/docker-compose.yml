# Latest version docker-compose
version: '3.8'

# The containers in the network
services:
  db:
    container_name: postgreSQL-dev
    # Build an image from the Dockerfile
    build:
      context: ./database
      dockerfile: Dockerfile.dev
    restart: always
    # Execute environments
    env_file:
      - ./env/.env.dev
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      PGDATA: /data/postgres
      TZ: ${POSTGRES_TIME_ZONE}
    # Map ports (host:container)
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}" ]
      interval: 30s
      timeout: 10s
      retries: 5
    # Mount volumes
    volumes:
      - pg-data:/var/lib/postgresql/data
    networks:
      - backend
  mqtt-client:
    container_name: mqtt-manager-dev
  # Using an existing image from DockerHub
    build:
      context: ./PlaingieMQTTManager
      dockerfile: Dockerfile.dev
    restart: always
    # Execute environments
    env_file:
      - ./env/.env.dev
    networks:
      - backend
    depends_on:
      db:
        condition: service_healthy
# Volumes
# Persist the data beyond the life of the container
volumes:
  pg-data:
    driver: local

# Networks
networks:
  backend: 
    driver: bridge